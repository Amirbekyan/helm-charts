replicaCount: 1

image:
  repository: nginx
  pullPolicy: IfNotPresent
  tag: ""

entrypoint:
  command: []
  args: []

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

initContainers: []
  # - name: metrics-scraper
  #   image: metrics-scraper:latest
  #   restartPolicy: Always
  #   command:
  #   args:
  #     - "--namespace"
  #     - "kubernetes-dashboard"

sidecars: []
  # - name: metrics-scraper
  #   image: metrics-scraper:latest
  #   restartPolicy: Always
  #   command:
  #   args:
  #     - "--namespace"
  #     - "kubernetes-dashboard"

# lifecycle:
#   postStart:
#     exec:
#       command:
#         - /usr/local/bin/envsubst
#         - '${REACT_APP_BASE_API_URL} ${REACT_APP_MINIO_BUCKET_URL} ${REACT_APP_CLIENT_URL} ${REACT_APP_DEFAULT_LNG} ${REACT_APP_ENVIRONMENT} ${REACT_APP_SKIN_NAME}'
#         - <
#         - $(find ./ -name main.*.js)

serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: ""

# role:
#   type: ClusterRole
#   rules:
#     - apiGroups: ["*"]
#       resources: ["*"]
#       verbs: ["*"]

deploymentAnnotations: {}
podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

envVarFromExistingSecret: []
  # - name: PASSWORD
  #   secret: secret-name
  #   key: pass

environmentVars:
  - name: APP
    value: cubik
  - name: PORT
    value: "4000"

envFromExistingSecret: []
  # - secret-name

environmentSecrets: []
  # - name: VAR_NAME
  #   value: value

envFromExistingConfigMap: []
  # - config-map-name

additionalSecrets: []
  # - name: kubernetes-dashboard-csrf
  #   data:
  #     csrf: ""

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
